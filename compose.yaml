services:
  mongodb:
    image: 'mongo:latest'
    build:
      context: './mongodb'
      dockerfile: 'Dockerfile'
    container_name: 'contiene_mongo'
    environment:
      - 'MONGO_INITDB_DATABASE=mydatabase'
    #      - 'MONGO_INITDB_ROOT_PASSWORD=secret'
    #      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - '27017:27017'
    volumes:
      - './data/db:/data/db'
      - './mongodb/productos.json:/docker-entrypoint-initdb.d/productos.json'  # Monta el archivo JSON como un volumen
#
  mysql:
    image: 'mysql:latest'
    container_name: 'contiene_mysql'
    environment:
      - 'MYSQL_DATABASE=Practica4'
      - 'MYSQL_ROOT_PASSWORD=admin'
    ports:
      - '3306:3306'
##  jpa:
##    hibernate:
##      dialect: org.hibernate.dialect.MySQLDialect
##      show-sql: true
##      ddl-auto: update
#
#  tomcat:
#    container_name: 'contiene_tomcat'
#    image: 'tomcat:latest'
#    ports:
#      - "8080:8080"
#    volumes:
#      - './build/libs/tienda.war:/usr/local/tomcat/webapps/tienda.war'

  node:
    container_name: 'contiene_node'
    build:
      context: './tienda_vue' # Carpeta donde se encuentra el Dockerfile
      dockerfile: 'Dockerfile' # Nombre del Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - './tienda_vue:/app'
